//首尾不连接
//求数组中子数组和的最大值
import java.util.Scanner;
public class Test2 {
  public static void main(String[] args){
	  int N=5;
	  int list[]=new int [N];
	  //创建一个新数组
	  Scanner in=new Scanner(System.in);
	  int i;
	  System.out.println("请输入数组：");
	  for(i=0;i<N;i++)
	  {
		  list[i]=in.nextInt();
	  }
	  max_ l=new max_();
	  System.out.print("子数组最大的和为:  "+l.max_(list,N));
	  //调用函数
	  in.close();
  }
}
class max_
{
	int max_(int list[],int length)
	{
		int i;
		int lmax=0;
		int max=list[0];
	    //设最大值为list[0]
		for(i=0;i<length;i++)
		{
			lmax+=list[i];
			if(lmax>max||lmax==max)
			{
				max=lmax;
			}
			if(lmax<0)//若小于0，则从后一个数开始加和
			{
				lmax=0;
				if(max<list[i]||max==list[i])
				{
					max=list[i];
				}
			}
			//若数组全为负数，求最大值
		}
		return max;
	}
}
