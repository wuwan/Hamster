import java.util.Scanner;
import java.util.ArrayList;
public class Test {
	public static void main(String[] args){
		int N,i,N1,N2;
		String hh;	
		Scanner in=new Scanner(System.in);	
		System.out.println("请输入需要打印的运算题的数目:");
		N=in.nextInt();
		System.out.println("请选择是否需要分数运算（Y/N）:");
		hh=in.next();
		if(hh.equals("Y"))//分数运算
		{
			for(i=0;i<N;i++)
			{
				int a,b,c,d,r1,r2;
				a=(int) (Math.random()*100);
			    b=(int) (Math.random()*99+1);
			    //分母不等于0
	            c=(int) (Math.random()*100);
	            d=(int) (Math.random()*99+1);
	            int h=(int)(Math.random()*4);
		    	int aa=0,bb=0,cc=0,dd=0;
		    	//为了产生分数，分子也不可为零
		    	if(a==0)
		    		a=(int) (Math.random()*99+1);
		    	if(c==0)
		    		c=(int) (Math.random()*99+1);
		    	if(a>b)
		    		r1=b;
		    	else
		    		r1=a;
		    	//化简分数
		    	for(int j=1;j<=r1;j++)
		    	{
		    		if(a%j==0&&b%j==0)
		    		{
		    			aa=a/j;
		    			bb=b/j;
		    		}
		    	}
		    	if(c>d)
		    		r2=d;
		    	else
		    		r2=c;
		    	//化简分数
		    	for(int j=1;j<=r2;j++)
		    	{
		    		if(c%j==0&&d%j==0)
		    		{
		    			cc=c/j;
		    			dd=d/j;
		    		}
		    	}
		        if(h==0)
		        {
		        	//化简后，分母等于1时，直接输出分子
		        	if(bb!=1&&dd!=1)
			            System.out.println(aa+"/"+bb+" + "+cc+"/"+dd+"=");
		        	else if(bb==1&&dd!=1)
		        		System.out.println(aa+" + "+cc+"/"+dd+"=");
		        	else if(bb!=1&&dd==1)
		        		System.out.println(aa+"/"+bb+" + "+cc+"=");
		        	else
		        		System.out.println(aa+"+"+cc+"=");
		        }
		        else if(h==1)
		        {
		        	//不能产生负数
		        	int t1,t2;
		        	if((a/b-c/d)<0)
		        	{
		        		t1=aa;
		        		aa=cc;
		        		cc=t1;
		        		t2=bb;
		        		bb=dd;
		        		dd=t2;
		        	}
		        	//化简后，分母等于1时，直接输出分子	
		        	if(bb!=1&&dd!=1)
			            System.out.println(aa+"/"+bb+" - "+cc+"/"+dd+"=");
		        	else if(bb==1&&dd!=1)
		        		System.out.println(aa+" - "+cc+"/"+dd+"=");
		        	else if(bb!=1&&dd==1)
		        		System.out.println(aa+"/"+bb+" - "+cc+"=");
		        	else
		        		System.out.println(aa+"-"+cc+"=");
		        }
		        else if(h==2)
		        {
		        	//化简后，分母等于1时，直接输出分子
		        	if(bb!=1&&dd!=1)
			            System.out.println(aa+"/"+bb+" * "+cc+"/"+dd+"=");
		        	else if(bb==1&&dd!=1)
		        		System.out.println(aa+" * "+cc+"/"+dd+"=");
		        	else if(bb!=1&&dd==1)
		        		System.out.println(aa+"/"+bb+" * "+cc+"=");
		        	else
		        		System.out.println(aa+"*"+cc+"=");
		        }
		        else
		        { 
		        	//化简后，分母等于1时，直接输出分子
		        	if(bb!=1&&dd!=1)
			            System.out.println(aa+"/"+bb+" / "+cc+"/"+dd+"=");
		        	else if(bb==1&&dd!=1)
		        		System.out.println(aa+" / "+cc+"/"+dd+"=");
		        	else if(bb!=1&&dd==1)
		        		System.out.println(aa+"/"+bb+" / "+cc+"=");
		        	else
		        		System.out.println(aa+"/"+cc+"=");
		        }
			}
		}
		else if(hh.equals("N"))//整数运算
		{
			System.out.println("请选择是否需要产生括号的运算题（Y/N）:");
			String str,str1,str2,str3;
			str=in.next();
			
			if(str.equals("Y"))
			{
				System.out.println("请输入数值范围:");
				N1=in.nextInt();
				for(i=0;i<N;i++)
				{
					ArrayList<Integer> al1=new ArrayList<Integer>();
					//申请动态数组存放操作数
					ArrayList<Integer> al2=new ArrayList<Integer>();
					//申请动态数组存放运算符
					int m,n,a,b;
					int j,k;
					m=(int) (Math.random()*7+3);
					//限制操作数个数
					n=m-1;
					//运算符个数
					for(j=0;j<m;j++)
					{
						a=(int) (Math.random()*(N1-1)+1);
						al1.add(a);
					}//将操作数压入al1数组
					
					for(k=0;k<n;k++)
					{
						b=(int) (Math.random()*4);
						al2.add(b);
					}//将运算符压入al2数组
					if(m==3)//产生的操作数是3个
					{
						if((int)al2.get(0)>(int)al2.get(1))//比较优先级
						{
							if((int)al2.get(0)==1)
							    System.out.print((int)al1.get(0)+"-"+(int)al1.get(1)+"+"+(int)al1.get(2));
							else if((int)al2.get(0)==2)
							{
								if((int)al2.get(1)==0)
								System.out.print((int)al1.get(0)+"*"+"("+(int)al1.get(1)+"+"+(int)al1.get(2)+")");
								else if((int)al2.get(1)==1)
									System.out.print((int)al1.get(0)+"*"+"("+(int)al1.get(1)+"-"+(int)al1.get(2)+")");
						    }
							else if((int)al2.get(0)==3)
							{
								if((int)al2.get(1)==0)
								System.out.print((int)al1.get(0)+"/"+"("+(int)al1.get(1)+"+"+(int)al1.get(2)+")");
								else if((int)al2.get(1)==1)
									System.out.print((int)al1.get(0)+"/"+"("+(int)al1.get(1)+"-"+(int)al1.get(2)+")");
								if((int)al2.get(1)==2)
									System.out.print((int)al1.get(0)+"/"+(int)al1.get(1)+"*"+(int)al1.get(2));
						    }
						}
						else if((int)al2.get(0)<(int)al2.get(1)||(int)al2.get(0)==(int)al2.get(1))//比较优先级
						{
							if((int)al2.get(0)==0)
							{
								if((int)al2.get(1)==0)
									System.out.print((int)al1.get(0)+"+"+(int)al1.get(1)+"+"+(int)al1.get(2));
								else if((int)al2.get(1)==1)
									System.out.print((int)al1.get(0)+"+"+(int)al1.get(1)+"-"+(int)al1.get(2));
								else if((int)al2.get(1)==2)
									System.out.print((int)al1.get(0)+"+"+(int)al1.get(1)+"*"+(int)al1.get(2));
								else if((int)al2.get(1)==3)
									System.out.print((int)al1.get(0)+"+"+(int)al1.get(1)+"/"+(int)al1.get(2));
							}
							else if((int)al2.get(0)==1)
							{
								if((int)al2.get(1)==1)
									System.out.print((int)al1.get(0)+"-"+(int)al1.get(1)+"-"+(int)al1.get(2));
								else if((int)al2.get(1)==2)
									System.out.print((int)al1.get(0)+"-"+(int)al1.get(1)+"*"+(int)al1.get(2));
								else if((int)al2.get(1)==3)
									System.out.print((int)al1.get(0)+"-"+(int)al1.get(1)+"/"+(int)al1.get(2));
						    }
							else if((int)al2.get(0)==2)
							{
								if((int)al2.get(1)==2)
									System.out.print((int)al1.get(0)+"*"+(int)al1.get(1)+"*"+(int)al1.get(2));
								else if((int)al2.get(1)==3)
									System.out.print((int)al1.get(0)+"*"+(int)al1.get(1)+"/"+(int)al1.get(2));
						    }
							else if((int)al2.get(0)==3)
							{
								System.out.print((int)al1.get(0)+"/"+(int)al1.get(1)+"/"+(int)al1.get(2));
							}
						}
						System.out.print("=");
						System.out.println();
					}
					else if(m>=4)//产生的操作大于等于4个
					{
						for(j=0;j<al2.size()-2;j=j+2)//输出运算表达式
						{
							k=j;
							if((int)al2.get(j)>(int)al2.get(j+1))//比较运算符优先级
							{
								if((int)al2.get(j)==1)//第一个出现减法
								    System.out.print((int)al1.get(k)+"-"+(int)al1.get(k+1)+"+"+(int)al1.get(k+2));
								else if((int)al2.get(j)==2)//第一个出现乘法
								{
									if((int)al2.get(j+1)==0)
									System.out.print((int)al1.get(k)+"*"+"("+(int)al1.get(k+1)+"+"+(int)al1.get(k+2)+")");
									else if((int)al2.get(j+1)==1)
										System.out.print((int)al1.get(k)+"*"+"("+(int)al1.get(k+1)+"-"+(int)al1.get(k+2)+")");
							    }
								else if((int)al2.get(j)==3)//第一个出现除法
								{
									if((int)al2.get(j+1)==0)
									System.out.print((int)al1.get(k)+"/"+"("+(int)al1.get(k+1)+"+"+(int)al1.get(k+2)+")");
									else if((int)al2.get(j+1)==1)
										System.out.print((int)al1.get(k)+"/"+"("+(int)al1.get(k+1)+"-"+(int)al1.get(k+2)+")");
									if((int)al2.get(j+1)==2)
										System.out.print((int)al1.get(k)+"/"+(int)al1.get(k+1)+"*"+(int)al1.get(k+2));
							    }
						    }
							else if((int)al2.get(j)<(int)al2.get(j+1)||(int)al2.get(j)==(int)al2.get(j+1))
							{
								if((int)al2.get(j)==0)
								{
									if((int)al2.get(j+1)==0)//第一个出现加法
										System.out.print((int)al1.get(k)+"+"+(int)al1.get(k+1)+"+"+(int)al1.get(k+2));
									else if((int)al2.get(j+1)==1)
										System.out.print((int)al1.get(k)+"+"+(int)al1.get(k+1)+"-"+(int)al1.get(k+2));
									else if((int)al2.get(j+1)==2)
										System.out.print((int)al1.get(k)+"+"+(int)al1.get(k+1)+"*"+(int)al1.get(k+2));
									else if((int)al2.get(j+1)==3)
										System.out.print((int)al1.get(k)+"+"+(int)al1.get(k+1)+"/"+(int)al1.get(k+2));
								}
								else if((int)al2.get(j)==1)//第一个出现减法
								{
									if((int)al2.get(j+1)==1)
										System.out.print((int)al1.get(k)+"-"+(int)al1.get(k+1)+"-"+(int)al1.get(k+2));
									else if((int)al2.get(j+1)==2)
										System.out.print((int)al1.get(k)+"-"+(int)al1.get(k+1)+"*"+(int)al1.get(k+2));
									else if((int)al2.get(j+1)==3)
										System.out.print((int)al1.get(k)+"-"+(int)al1.get(k+1)+"/"+(int)al1.get(k+2));
							    }
								else if((int)al2.get(j)==2)//第一个出现乘法
								{
									if((int)al2.get(j+1)==2)
										System.out.print((int)al1.get(k)+"*"+(int)al1.get(k+1)+"*"+(int)al1.get(k+2));
									else if((int)al2.get(j+1)==3)
										System.out.print((int)al1.get(k)+"*"+(int)al1.get(k+1)+"/"+(int)al1.get(k+2));
							    }
								else if((int)al2.get(j)==3)//第一个出现除法
								{
									System.out.print((int)al1.get(k)+"/"+(int)al1.get(k+1)+"/"+(int)al1.get(k+2));
								}
							}
							if((int)al2.get(j+2)==0)
								System.out.print("+");
							else if((int)al2.get(j+2)==1)
								System.out.print("-");
							else if((int)al2.get(j+2)==2)
								System.out.print("*");
							else if((int)al2.get(j+2)==3)
								System.out.print("/");
						}
						System.out.print((int)al1.get(al1.size()-1));
						//输出最后一位操作数
						System.out.print("=");
						System.out.println();				
					}
	            }
			}
			
			else if(str.equals("N"))//不需要产生括号
			{
				System.out.println("请输入数值范围:");
				N2=in.nextInt();
				System.out.println("请选择是否有无乘除法的运算题（Y/N）:");
				str1=in.next();
				if(str1.equals("Y"))//有乘除法
				{				
					System.out.println("请选择是否有无余数的运算题（Y/N）:");
					str2=in.next();				
					if(str2.equals("Y"))//需要有余数
					{
						System.out.println("请选择是否有负数（Y/N）:");
						str3=in.next();
						for(i=0;i<N;i++)
						{
							int a,b,c,c1,h,h2;
							a=(int) (Math.random()*N2);
						    b=(int) (Math.random()*N2);
							h=(int) (Math.random()*4);
						    //控制加减运算符
							c=(int) (Math.random()*(N2-1)+1);
						    c1=(int) (Math.random()*10+1);
						    //控制倍数
						    
							if(str3.equals("Y"))//有负数
							{
							    if(h==0)//加法
							    {
							    	h2=(int) (Math.random()*2);
							    	//控制有无负数
							    	if(h2==0)
							    		System.out.println(a+"+"+b+"=");
							    	else if(h2==1)
							    		System.out.println("-"+a+"+"+b+"=");
							    }
							    if(h==1)//减法
							    {
							    	h2=(int) (Math.random()*2);
							    	//控制有无负数
							    	if(h2==0)
							    		System.out.println(a+"-"+b+"=");
							    	else if(h2==1)
							    		System.out.println("-"+a+"-"+b+"=");
							    }
							}
							else if(str3.equals("N"))//无负数
							{
								if(h==0)
							    {
							    	System.out.println(a+"+"+b+"=");
							    }
							    if(h==1)
							    {
							    	System.out.println(a+"-"+b+"=");
							    }
							}
						    if(h==2)
						    {
						    	System.out.println(a+"*"+b+"=");
						    }
						    if(h==3)
						    {
						    	int d,k;
						    	k=(int) (Math.random()*(c-1)+1);
						    	//必须产生余数
						    	d=c*c1+k;
						    	System.out.println(d+"/"+c+"=");
						    }
						}
					}
					else if(str2.equals("N"))//不需要产生余数
					{
						System.out.println("请选择是否有负数（Y/N）:");
						str3=in.next();
						for(i=0;i<N;i++)
						{
							int a,b,c,c1,h,h2;
							a=(int) (Math.random()*N2);
						    b=(int) (Math.random()*N2);
						    h=(int) (Math.random()*4);
						    //控制加减运算符
							c=(int) (Math.random()*(N2-1)+1);
						    c1=(int) (Math.random()*10+1);
						    //控制倍数
						    
							if(str3.equals("Y"))//有负数
							{
							    if(h==0)//加法
							    {
							    	h2=(int) (Math.random()*2);
							    	//控制有无负数
							    	if(h2==0)
							    		System.out.println(a+"+"+b+"=");
							    	else if(h2==1)
							    		System.out.println("-"+a+"+"+b+"=");
							    }
							    if(h==1)//减法
							    {
							    	h2=(int) (Math.random()*2);
							    	//控制有无负数
							    	if(h2==0)
							    		System.out.println(a+"-"+b+"=");
							    	else if(h2==1)
							    		System.out.println("-"+a+"-"+b+"=");
							    }
							}
							else if(str3.equals("N"))//无负数
							{
								if(h==0)
							    {
							    	System.out.println(a+"+"+b+"=");
							    }
							    if(h==1)
							    {
							    	System.out.println(a+"-"+b+"=");
							    }
							}
						    if(h==2)//乘法
						    {
						    	System.out.println(a+"*"+b+"=");
						    }
						    if(h==3)//除法，不产生余数
						    {
						    	int d;
						    	//不能产生余数
						    	d=c*c1;
						    	System.out.println(d+"/"+c+"=");
						    }
						}
					}
				}
						
				else if(str1.equals("N"))//没有乘除法
				{
					int a,b,h,h2;						
					System.out.println("请选择是否有负数（Y/N）:");
					str3=in.next();
					for(i=0;i<N;i++)
					{
						a=(int) (Math.random()*N2);
					    b=(int) (Math.random()*N2);
						h=(int) (Math.random()*2);
						//控制运算符
						
						if(str3.equals("Y"))//有负数
						{
						    if(h==0)//加法
						    {
						    	h2=(int) (Math.random()*2);
						    	//控制有无负数
						    	if(h2==0)
						    		System.out.println(a+"+"+b+"=");
						    	else if(h2==1)
						    		System.out.println("-"+a+"+"+b+"=");
						    }
						    if(h==1)//减法
						    {
						    	h2=(int) (Math.random()*2);
						    	//控制有无负数
						    	if(h2==0)
						    		System.out.println(a+"-"+b+"=");
						    	else if(h2==1)
						    		System.out.println("-"+a+"-"+b+"=");
						    }
						}
						else if(str3.equals("N"))//无负数
						{
							if(h==0)
						    {
						    	System.out.println(a+"+"+b+"=");
						    }
						    if(h==1)
						    {
						    	System.out.println(a+"-"+b+"=");
						    }
						}
					}
				}
			}
		}
		in.close();
	}
}

